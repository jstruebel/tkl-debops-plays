---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# Default variables
# =================
#
# .. contents:: Sections
#    :local:

# .. OpenLDAP BaseDN configuration [[[1
#
# ---------------------------------
#   OpenLDAP BaseDN configuration
# ---------------------------------

# .. envvar:: slapd_domain
#
# DNS domain name which will be used for OpenLDAP BaseDN.
slapd_domain: '{{ tkl_slapd_domain|d(ansible_domain) }}'


# .. envvar:: slapd_basedn
#
# BaseDN value of the OpenLDAP server.
slapd_basedn: '{{ tkd_slapd_basedn|d("dc=" + slapd_domain.split(".") | join(",dc=")) }}'


# .. envvar:: slapd_backend
#
# Specify database backend to use.
slapd_backend: '{{ tkl_slapd_backend|d("hdb") }}'

# .. envvar:: slapd_password_length
#
# Length of passwords set on administrator accounts.
slapd_password_length: '{{ tkl_slapd_password_length|d(128) }}'


# .. envvar:: slapd_log_level
#
# Log level (see :manpage:`slapd-config(5)` for details).
slapd_log_level: '{{ tkl_slapd_log_level|d("none") }}'


# .. envvar:: slapd_default_services
#
# Default services enabled in :file:`/etc/default/slapd` (change requires
# restart).
slapd_default_services: '{{ tkl_slapd_default_services|d([ "ldap:///", "ldaps:///", "ldapi:///" ]) }}'


# .. Network access to OpenLDAP server [[[1
#
# -------------------------------------
#   Network access to OpenLDAP server
# -------------------------------------

# .. envvar:: slapd_anonymous_bind
#
# Deny anonymous bind to the server by default and require authentication.
# Set to ``True`` to allow anonymous bind.
slapd_anonymous_bind: '{{ tkl_slapd_anonymous_bind|d(True) }}'


# .. slapd system configuration [[[1
#
# ------------------------------
#   slapd system configuration
# ------------------------------

# .. envvar:: slapd_append_groups
#
# List of system groups to grant to 'openldap' user. 'ssl-cert' group is
# required for access to private keys.
slapd_append_groups: '{{ tkl_slapd_append_groups|d([ "ssl-cert" ]) }}'

# .. envvar:: slapd_snapshot
#
# Create snapshots of LDAP database periodically.
slapd_snapshot: '{{ tkl_slapd_snapshot|d(False) }}'


# .. envvar:: slapd_snapshot_period
#
# Snapshot period: ``daily``, ``weekly``.
slapd_snapshot_period: '{{ tkl_slapd_snapshot_period|d("weekly") }}'


# .. PKI / TSL and certificates [[[1
#
# ------------------------------
#   PKI / TLS and certificates
# ------------------------------

# .. envvar::: slapd_pki
#
# Enable or disable support for certificates using the ``debops.pki`` role.
slapd_pki: '{{ tkl_slapd_pki|d((ansible_local.pki.enabled
                if (ansible_local|d() and ansible_local.pki|d() and
                    ansible_local.pki.enabled|d())
                else False) | bool) }}'


# .. envvar:: slapd_pki_path
#
# Base PKI directory.
slapd_pki_path: '{{ tkl_slapd_pki_path|d((ansible_local.pki.base_path
                     if (ansible_local|d() and ansible_local.pki|d() and
                         ansible_local.pki.base_path|d())
                     else "/etc/ldap")) }}'


# .. envvar:: slapd_pki_realm
#
# Default PKI realm used by OpenLDAP.
slapd_pki_realm: '{{ tkl_slapd_pki_realm|d((ansible_local.pki.realm
                      if (ansible_local|d() and ansible_local.pki|d() and
                          ansible_local.pki.realm|d())
                      else "tls")) }}'


# .. envvar:: slapd_pki_ca
#
# Root CA certificate, relative to :envvar:`slapd_pki_realm`.
slapd_pki_ca: '{{ tkl_slapd_pki_ca|d("ca_cert.pem") }}'


# .. envvar:: slapd_pki_crt
#
# Host certificate, relative to :envvar:`slapd_pki_realm`.
slapd_pki_crt: '{{ tkl_slapd_pki_crt|d("openldap_crt.pem") }}'


# .. envvar:: slapd_pki_key
#
# Host private key, relative to :envvar:`slapd_pki_realm`.
slapd_pki_key: '{{ tkl_slapd_pki_key|d("openldap_key.pem") }}'


# .. envvar:: slapd_dhparam_set
#
# Specify the Diffie-Hellman parameter set to use. See ``debops.dhparam`` role
# for more details.
slapd_dhparam_set: '{{ tkl_slapd_dhparam_set|d("default") }}'


# .. envvar:: slapd_dhparam_file
#
# Absolute path to file with Diffie-Hellman parameters.
slapd_dhparam_file: '{{ tkl_slapd_dhparam_file|d((ansible_local.dhparam[slapd_dhparam_set]
                         if (ansible_local|d() and ansible_local.dhparam|d() and
                             ansible_local.dhparam[slapd_dhparam_set]|d())
                         else "")) }}'


# .. envvar:: slapd_pki_ciphers
#
# TLS cipher suite required by the server.
slapd_pki_ciphers: '{{ tkl_slapd_pki_ciphers|d("normal") }}'


# .. Administrator accounts & password [[[1
#
# --------------------------------------
#   Administrator accounts & passwords
# --------------------------------------

# slapd passwords cannot be directly generated by Ansible; they are handled in
# separate tasks during runtime. Here you can change the location of passwords
# in ``debops.secret`` storage if needed, for example to point several slapd
# servers to the same set of passwords.


# .. envvar:: slapd_config_admin_basepw
#
# Base path to BaseDN administrator (``cn=admin,cn=config``) password.
slapd_config_admin_basepw: '{{ tkl_slapd_config_admin_basepw|d(secret + "/credentials/" + ansible_fqdn + "/slapd/cn=config/cn=admin,cn=config") }}'


# .. envvar:: slapd_config_admin_password
#
# Path for the plaintext password of BaseDN administrator
# (``cn=admin,cn=config``).
slapd_config_admin_password: '{{ tkl_slapd_config_admin_password|d(slapd_config_admin_basepw + ".password") }}'


# .. envvar:: slapd_config_admin_hash
#
# Path for the hash of BaseDN administrator (``cn=admin,cn=config``) password.
slapd_config_admin_hash: '{{ tkl_slapd_config_admin_hash|d(slapd_config_admin_basepw + ".hash") }}'


# .. envvar:: slapd_basedn_admin
#
# Distinguished Name of main administrator account.
slapd_basedn_admin: '{{ tkl_slapd_basedn_admin|d("cn=admin," + slapd_basedn) }}'


# .. envvar:: slapd_basedn_admin_basepw
#
# Base path to BaseDN administrator password.
slapd_basedn_admin_basepw: '{{ tkl_slapd_basedn_admin_basepw|d(secret + "/slapd/credentials/" + slapd_basedn + "/" + slapd_basedn_admin) }}'


# .. envvar:: slapd_basedn_admin_password
#
# Path for the plaintext password of BaseDN administrator.
slapd_basedn_admin_password: '{{ tkl_slapd_basedn_admin_password|d(slapd_basedn_admin_basepw + ".password") }}'


# .. envvar:: slapd_basedn_admin_hash
#
# Path for the hash of BaseDN administrator password.
slapd_basedn_admin_hash: '{{ tkl_slapd_basedn_admin_hash|d(slapd_basedn_admin_basepw + ".hash") }}'


# .. envvar:: slapd_basedn_admin_ansible_password
#
# Location of the Ansible password file for LDAP admin access. See the
# ``debops.secret`` role for more details.
slapd_basedn_admin_ansible_password: '{{ tkl_slapd_basedn_admin_ansible_password|d(secret_ldap_admin_password) }}'


# .. ldapscripts configuration [[[1
#
# -----------------------------
#   ldapscripts configuration
# -----------------------------

# See :file:`templates/etc/ldapscripts/ldapscripts.conf` for more information
# about these variables.

# .. envvar:: slapd_ldapscripts
#
# Enable :command:`ldapscripts` support.
slapd_ldapscripts: '{{ tkl_slapd_ldapscripts|d(True) }}'


# .. envvar:: slapd_ldapscripts_server
#
# LDAP server to configure.
slapd_ldapscripts_server: '{{ tkl_slapd_ldapscripts_server|d("ldap://localhost") }}'


# .. envvar:: slapd_ldapscripts_suffix
#
# Default BaseDN to use in ldapscripts.
slapd_ldapscripts_suffix: '{{ tkl_slapd_ldapscripts_suffix|d(slapd_basedn) }}'


# .. envvar:: slapd_ldapscripts_gsuffix
#
# Oranizational Unit for Groups.
slapd_ldapscripts_gsuffix: '{{ tkl_slapd_ldapscripts_gsuffix|d("ou=Groups") }}'


# .. envvar:: slapd_ldapscripts_usuffix
#
# Organizational Unit for Users.
slapd_ldapscripts_usuffix: '{{ tkl_slapd_ldapscripts_usuffix|d("ou=Users") }}'


# .. envvar:: slapd_ldapscripts_msuffix
#
# Organizational Unit for Machines.
slapd_ldapscripts_msuffix: '{{ tkl_slapd_ldapscripts_msuffix|d("ou=Machines") }}'


# .. envvar:: slapd_ldapscripts_binddn
#
# BindDN admin account.
slapd_ldapscripts_binddn: '{{ tkl_slapd_ldapscripts_binddn|d(slapd_basedn_admin) }}'


# .. envvar:: slapd_ldapscripts_bindpwfile
#
# BindDN password file.
slapd_ldapscripts_bindpwdfile: '{{ tkl_slapd_ldapscripts_bindpwdfile|d("/etc/ldapscripts/ldapscripts.passwd") }}'


# .. envvar:: slapd_ldapscripts_password_lookup
#
# Where to look for admin account password.
slapd_ldapscripts_password_lookup: '{{ tkl_slapd_ldapscripts_password_lookup|d(slapd_basedn_admin_password) }}'


# .. envvar:: slapd_ldapscripts_gidstart
#
# Start ID for Groups.
slapd_ldapscripts_gidstart: '10000'


# .. envvar:: slapd_ldapscripts_uidstart
#
# Start ID for Users.
slapd_ldapscripts_uidstart: '{{ tkl_slapd_ldapscripts_uidstart|d("10000") }}'


# .. envvar:: slapd_ldapscripts_midstart
#
# Start ID for Machines.
slapd_ldapscripts_midstart: '{{ tkl_slapd_ldapscripts_midstart|d("20000") }}'


# .. envvar:: slapd_ldapscripts_gclass
#
# Group membership management. Possible values: ``posixGroup``,
# ``groupOfNames``, ``groupOfUniqueNames``.
slapd_ldapscripts_gclass: '{{ tkl_slapd_ldapscripts_gclass|d("posixGroup") }}'


# .. envvar:: slapd_ldapscripts_gdummymember
#
#
slapd_ldapscripts_gdummymember: '{{ tkl_slapd_ldapscripts_gdummymember|d("uid=dummy,$USUFFIX,$SUFFIX") }}'


# .. envvar:: slapd_ldapscripts_passwordgen
#
# User password generation.
slapd_ldapscripts_passwordgen: '{{ tkl_slapd_ldapscripts_passwordgen|d("pwgen") }}'


# .. Custom LDAP schema [[[1
#
# ----------------------
#   Custom LDAP schema
# ----------------------

# .. envvar:: slapd_ldap_schema
#
# These files will be automatically loaded into ``cn=config`` configuration
# database by a helper script. You need to specify absolute paths to
# :file:`*.ldif` files. Default set can be found in :file:`/etc/ldap/schema/`.
slapd_ldap_schema: '{{ tkl_slapd_ldap_schema|d([
  "/usr/local/etc/ldap/schema/ldapns.ldif"
]) }}'


# .. LDAP index configuration [[[1
#
# ----------------------------
#   LDAP index configuration
# ----------------------------

# .. envvar:: slapd_ldap_index
#
# List of index entries configured on the server.
slapd_ldap_index: '{{ tkl_slapd_ldap_index|d(slapd_ldap_index_default) }}'


# .. envvar:: slapd_ldap_index_default
#
# Default list of LDAP indices.
slapd_ldap_index_default: '{{ tkl_slapd_ldap_index_default|d([
  "objectClass eq",
  "uidNumber,gidNumber eq",
  "cn eq,pres,sub",
  "sn eq,pres,sub",
  "ou eq,pres,sub",
  "uid eq,pres,sub",
  "displayName eq,pres,sub",
  "mail,givenName eq,subinitial",
  "loginShell eq",
  "memberUid eq,pres,sub",
  "member eq,pres",
  "uniqueMember eq,pres",
  "dc eq",
  "default sub",
  "sambaSID eq",
  "sambaPrimaryGroupSID eq",
  "sambaGroupType eq",
  "sambaSIDList eq",
  "sambaDomainName eq",
  "authorizedService eq",
  "host eq",
  "entryCSN eq",
  "entryUUID eq"
]) }}'


# .. LDAP connection security [[[1
#
# ----------------------------
#   LDAP connection security
# ----------------------------

# .. envvar:: slapd_ldap_security
#
# List of security rules enabled on the OpenLDAP server.
slapd_ldap_security: '{{ tkl_slapd_ldap_security|d(slapd_ldap_security_tls
                         if slapd_pki | bool
                         else slapd_ldap_security_default) }}'



# .. envvar:: slapd_ldap_security_tls
#
# Require encryption for all connections.
slapd_ldap_security_tls: '{{ tkl_slapd_ldap_security_tls|d([
  "simple_bind=128",
  "update_ssf=128",
  "ssf=128",
  "tls=128"
]) }}'


# .. LDAP Access Control List [[[1
#
# ----------------------------
#   LDAP Access Control List
# ----------------------------

# .. envvar:: slapd_hosts_basedn
#
# BaseDN for samba host accounts
slapd_hosts_basedn: '{{ tkl_slapd_hosts_basedn|d("ou=Hosts," + slapd_basedn) }}'

# .. envvar:: slapd_idmaps_basedn
#
# BaseDN for samba idmap data
slapd_idmaps_basedn: '{{ tkl_slapd_idmaps_basedn|d("ou=Idmaps," + slapd_basedn) }}'

# .. envvar:: slapd_users_basedn
#
# BaseDN for user accounts
slapd_users_basedn: '{{ tkl_slapd_users_basedn|d("ou=Users," + slapd_basedn) }}'

# .. envvar:: slapd_services_basedn
#
# BaseDN for samba service accounts
slapd_services_basedn: '{{ tkl_slapd_services_basedn|d("ou=Services," + slapd_basedn) }}'

# .. envvar:: slapd_machines_basedn
#
# BaseDN for machine accounts
slapd_machines_basedn: '{{ tkl_slapd_machines_basedn|d("ou=Machines," + slapd_basedn) }}'

# .. envvar:: slapd_samba_machines_basedn
#
# BaseDN for samba machine accounts
slapd_samba_machines_basedn: '{{ tkl_slapd_samba_machines_basedn|d("ou=Samba," + slapd_machines_basedn) }}'

# .. envvar:: slapd_ldap_access_control_list
#
# List of olcAccess attributes configured on the server.
slapd_ldap_access_control_list: '{{ tkl_slapd_ldap_access_control_list|d(tkl_slapd_ldap_access_control_list_default) }}'


# .. envvar:: slapd_acl_tls_ssf
#
# Security Strength Factor used in ACL entries.
slapd_acl_tls_ssf: '{{ tkl_slapd_acl_tls_ssf|d("tls_ssf=128 ssf=128"
                       if slapd_pki | bool else "") }}'


# .. envvar:: tkl_slapd_ldap_access_control_list_default
#
# Default LDAP ACL. Order of entries is important!
tkl_slapd_ldap_access_control_list_default: 
  - |
    to dn.children="{{ slapd_idmaps_basedn }}"
    attrs=userPassword,shadowLastChange,SambaLMPassword,SambaNTPassword
    by {{ slapd_acl_tls_ssf }} self write
    by {{ slapd_acl_tls_ssf }} anonymous auth
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * none
  - |
    to dn.subtree="{{ slapd_idmaps_basedn }}"
    by {{ slapd_acl_tls_ssf }} self write
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * read
  - |
    to dn.children="{{ slapd_hosts_basedn }}"
    attrs=userPassword,shadowLastChange,SambaLMPassword,SambaNTPassword
    by {{ slapd_acl_tls_ssf }} self write
    by {{ slapd_acl_tls_ssf }} anonymous auth
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * none
  - |
    to dn.subtree="{{ slapd_hosts_basedn }}"
    by {{ slapd_acl_tls_ssf }} self write
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * read
  - |
    to dn.children="{{ slapd_users_basedn }}"
    attrs=userPassword,shadowLastChange,SambaLMPassword,SambaNTPassword
    by {{ slapd_acl_tls_ssf }} self write
    by {{ slapd_acl_tls_ssf }} anonymous auth
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_services_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * none
  - |
    to dn.children="{{ slapd_users_basedn }}"
    by {{ slapd_acl_tls_ssf }} self write
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * read
  - |
    to filter=(objectClass=sambaDomain)
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * read
  - |
    to dn.base="{{ slapd_basedn }}" attrs=children
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_samba_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * read
  - |
    to attrs=userPassword,shadowLastChange,SambaLMPassword,SambaNTPassword
    by {{ slapd_acl_tls_ssf }} self write
    by {{ slapd_acl_tls_ssf }} anonymous auth
    by {{ slapd_acl_tls_ssf }} dn.subtree="{{ slapd_machines_basedn }}" write
    by {{ slapd_acl_tls_ssf }} dn="{{ slapd_basedn_admin }}" write
    by * none
  - |
    to dn.base=""
    by {{ slapd_acl_tls_ssf }} * read
  - |
    to *
    by {{ slapd_acl_tls_ssf }} * read
